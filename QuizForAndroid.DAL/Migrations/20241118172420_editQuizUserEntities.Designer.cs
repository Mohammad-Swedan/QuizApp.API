// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuizForAndroid.DAL.Contexts;

#nullable disable

namespace QuizForAndroid.DAL.Migrations
{
    [DbContext(typeof(QuizAppDbContext))]
    [Migration("20241118172420_editQuizUserEntities")]
    partial class editQuizUserEntities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QuizForAndroid.DAL.Entities.Choice", b =>
                {
                    b.Property<int>("ChoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ChoiceID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChoiceId"));

                    b.Property<string>("ChoiceText")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int")
                        .HasColumnName("QuestionID");

                    b.HasKey("ChoiceId")
                        .HasName("PK__Choices__76F51686BD01D378");

                    b.HasIndex("QuestionId");

                    b.ToTable("Choices");
                });

            modelBuilder.Entity("QuizForAndroid.DAL.Entities.College", b =>
                {
                    b.Property<int>("CollegeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CollegeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CollegeId"));

                    b.Property<string>("CollegeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UniversityId")
                        .HasColumnType("int")
                        .HasColumnName("UniversityID");

                    b.HasKey("CollegeId")
                        .HasName("PK__Colleges__294095192E4C90E1");

                    b.HasIndex("UniversityId");

                    b.ToTable("Colleges");
                });

            modelBuilder.Entity("QuizForAndroid.DAL.Entities.Draft", b =>
                {
                    b.Property<int>("DraftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DraftID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DraftId"));

                    b.Property<int>("QuizId")
                        .HasColumnType("int")
                        .HasColumnName("QuizID");

                    b.HasKey("DraftId")
                        .HasName("PK__Drafts__3E93D63BE72B0711");

                    b.HasIndex("QuizId");

                    b.ToTable("Drafts");
                });

            modelBuilder.Entity("QuizForAndroid.DAL.Entities.Material", b =>
                {
                    b.Property<int>("MaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaterialID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaterialId"));

                    b.Property<int>("CollegeId")
                        .HasColumnType("int")
                        .HasColumnName("CollegeID");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("MaterialId")
                        .HasName("PK__Material__C506131773962DC6");

                    b.HasIndex("CollegeId");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("QuizForAndroid.DAL.Entities.PendingWriterApplication", b =>
                {
                    b.Property<DateTime>("ApplicationDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int")
                        .HasColumnName("ApplicationID");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.ToTable((string)null);

                    b.ToView("PendingWriterApplications", (string)null);
                });

            modelBuilder.Entity("QuizForAndroid.DAL.Entities.Question", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("QuestionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestionId"));

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<int>("QuestionType")
                        .HasColumnType("int");

                    b.Property<int>("QuizId")
                        .HasColumnType("int")
                        .HasColumnName("QuizID");

                    b.HasKey("QuestionId")
                        .HasName("PK__Question__0DC06F8C543A4A48");

                    b.HasIndex("QuizId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("QuizForAndroid.DAL.Entities.QuestionTypeInfo", b =>
                {
                    b.Property<int>("QuestionTypeId")
                        .HasColumnType("int")
                        .HasColumnName("QuestionTypeID");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("QuestionTypeId")
                        .HasName("PK__Question__7EDFF911433D551E");

                    b.HasIndex(new[] { "TypeName" }, "UQ__Question__D4E7DFA8393065AB")
                        .IsUnique();

                    b.ToTable("QuestionTypeInfo");
                });

            modelBuilder.Entity("QuizForAndroid.DAL.Entities.Quiz", b =>
                {
                    b.Property<int>("QuizId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("QuizID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuizId"));

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<int>("DisLikes")
                        .HasColumnType("int");

                    b.Property<bool>("IsDoctor")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDraft")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTrusted")
                        .HasColumnType("bit");

                    b.Property<int>("Likes")
                        .HasColumnType("int");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int")
                        .HasColumnName("MaterialID");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("WriterId")
                        .HasColumnType("int")
                        .HasColumnName("WriterID");

                    b.HasKey("QuizId")
                        .HasName("PK__Quizzes__8B42AE6EDA3B402B");

                    b.HasIndex("WriterId");

                    b.HasIndex(new[] { "MaterialId", "IsDraft", "CreatedDate" }, "IX_Quizzes_MaterialID_IsDraft_CreatedDate")
                        .IsDescending(false, false, true);

                    b.ToTable("Quizzes");
                });

            modelBuilder.Entity("QuizForAndroid.DAL.Entities.QuizLikesDislike", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<int>("QuizId")
                        .HasColumnType("int")
                        .HasColumnName("QuizID");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsLike")
                        .HasColumnType("bit");

                    b.HasKey("UserId", "QuizId")
                        .HasName("PK__QuizLike__EF3CE64A82C55CFC");

                    b.HasIndex("QuizId");

                    b.ToTable("QuizLikesDislikes");
                });

            modelBuilder.Entity("QuizForAndroid.DAL.Entities.QuizPopularity", b =>
                {
                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<int?>("Dislikes")
                        .HasColumnType("int");

                    b.Property<bool>("IsDraft")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTrusted")
                        .HasColumnType("bit");

                    b.Property<int?>("Likes")
                        .HasColumnType("int");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int")
                        .HasColumnName("MaterialID");

                    b.Property<int>("QuizId")
                        .HasColumnType("int")
                        .HasColumnName("QuizID");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("WriterId")
                        .HasColumnType("int")
                        .HasColumnName("WriterID");

                    b.ToTable((string)null);

                    b.ToView("QuizPopularity", (string)null);
                });

            modelBuilder.Entity("QuizForAndroid.DAL.Entities.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("RoleId")
                        .HasName("PK__Roles__8AFACE3A7393B002");

                    b.HasIndex(new[] { "RoleName" }, "UQ__Roles__8A2B61603D996F14")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("QuizForAndroid.DAL.Entities.Specialization", b =>
                {
                    b.Property<int>("SpecializationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SpecializationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpecializationId"));

                    b.Property<int>("CollegeId")
                        .HasColumnType("int")
                        .HasColumnName("CollegeID");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("SpecializationName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("SpecializationId")
                        .HasName("PK__Speciali__5809D84F9753427C");

                    b.HasIndex("CollegeId");

                    b.ToTable("Specializations");
                });

            modelBuilder.Entity("QuizForAndroid.DAL.Entities.University", b =>
                {
                    b.Property<int>("UniversityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UniversityID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UniversityId"));

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UniversityName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("UniversityId")
                        .HasName("PK__Universi__9F19E19C4193A149");

                    b.HasIndex(new[] { "UniversityName" }, "UQ__Universi__53F0B53C07D8FA45")
                        .IsUnique();

                    b.ToTable("Universities");
                });

            modelBuilder.Entity("QuizForAndroid.DAL.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int>("CollegeId")
                        .HasColumnType("int")
                        .HasColumnName("CollegeID");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsDoctor")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTrusted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("RoleID");

                    b.Property<int>("SpecializationId")
                        .HasColumnType("int")
                        .HasColumnName("SpecializationID");

                    b.Property<int>("TotalDisLikes")
                        .HasColumnType("int");

                    b.Property<int>("TotalLikes")
                        .HasColumnType("int");

                    b.Property<int>("UniversityId")
                        .HasColumnType("int")
                        .HasColumnName("UniversityID");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CCACEEB9558A");

                    b.HasIndex("CollegeId");

                    b.HasIndex("RoleId");

                    b.HasIndex("SpecializationId");

                    b.HasIndex("UniversityId");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D10534A35D02CE")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("QuizForAndroid.DAL.Entities.WriterApplication", b =>
                {
                    b.Property<int>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ApplicationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicationId"));

                    b.Property<DateTime>("ApplicationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("ReviewedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReviewedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValue("Pending");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("ApplicationId")
                        .HasName("PK__WriterAp__C93A4F79EF163886");

                    b.HasIndex("ReviewedBy");

                    b.HasIndex("UserId");

                    b.ToTable("WriterApplications");
                });

            modelBuilder.Entity("QuizForAndroid.DAL.Entities.Choice", b =>
                {
                    b.HasOne("QuizForAndroid.DAL.Entities.Question", "Question")
                        .WithMany("Choices")
                        .HasForeignKey("QuestionId")
                        .IsRequired()
                        .HasConstraintName("FK__Choices__Questio__5EBF139D");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("QuizForAndroid.DAL.Entities.College", b =>
                {
                    b.HasOne("QuizForAndroid.DAL.Entities.University", "University")
                        .WithMany("Colleges")
                        .HasForeignKey("UniversityId")
                        .IsRequired()
                        .HasConstraintName("FK__Colleges__Univer__3E52440B");

                    b.Navigation("University");
                });

            modelBuilder.Entity("QuizForAndroid.DAL.Entities.Draft", b =>
                {
                    b.HasOne("QuizForAndroid.DAL.Entities.Quiz", "Quiz")
                        .WithMany("Drafts")
                        .HasForeignKey("QuizId")
                        .IsRequired()
                        .HasConstraintName("FK__Drafts__QuizID__656C112C");

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("QuizForAndroid.DAL.Entities.Material", b =>
                {
                    b.HasOne("QuizForAndroid.DAL.Entities.College", "College")
                        .WithMany("Materials")
                        .HasForeignKey("CollegeId")
                        .IsRequired()
                        .HasConstraintName("FK__Materials__Colle__4D94879B");

                    b.Navigation("College");
                });

            modelBuilder.Entity("QuizForAndroid.DAL.Entities.Question", b =>
                {
                    b.HasOne("QuizForAndroid.DAL.Entities.Quiz", "Quiz")
                        .WithMany("Questions")
                        .HasForeignKey("QuizId")
                        .IsRequired()
                        .HasConstraintName("FK__Questions__QuizI__59FA5E80");

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("QuizForAndroid.DAL.Entities.Quiz", b =>
                {
                    b.HasOne("QuizForAndroid.DAL.Entities.Material", "Material")
                        .WithMany("Quizzes")
                        .HasForeignKey("MaterialId")
                        .IsRequired()
                        .HasConstraintName("FK__Quizzes__Materia__5441852A");

                    b.HasOne("QuizForAndroid.DAL.Entities.User", "Writer")
                        .WithMany("Quizzes")
                        .HasForeignKey("WriterId")
                        .IsRequired()
                        .HasConstraintName("FK__Quizzes__WriterI__534D60F1");

                    b.Navigation("Material");

                    b.Navigation("Writer");
                });

            modelBuilder.Entity("QuizForAndroid.DAL.Entities.QuizLikesDislike", b =>
                {
                    b.HasOne("QuizForAndroid.DAL.Entities.Quiz", "Quiz")
                        .WithMany("QuizLikesDislikes")
                        .HasForeignKey("QuizId")
                        .IsRequired()
                        .HasConstraintName("FK__QuizLikes__QuizI__628FA481");

                    b.HasOne("QuizForAndroid.DAL.Entities.User", "User")
                        .WithMany("QuizLikesDislikes")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__QuizLikes__UserI__619B8048");

                    b.Navigation("Quiz");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuizForAndroid.DAL.Entities.Specialization", b =>
                {
                    b.HasOne("QuizForAndroid.DAL.Entities.College", "College")
                        .WithMany("Specializations")
                        .HasForeignKey("CollegeId")
                        .IsRequired()
                        .HasConstraintName("FK__Specializ__Colle__412EB0B6");

                    b.Navigation("College");
                });

            modelBuilder.Entity("QuizForAndroid.DAL.Entities.User", b =>
                {
                    b.HasOne("QuizForAndroid.DAL.Entities.College", "College")
                        .WithMany("Users")
                        .HasForeignKey("CollegeId")
                        .IsRequired()
                        .HasConstraintName("FK__Users__CollegeID__48CFD27E");

                    b.HasOne("QuizForAndroid.DAL.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__Users__RoleID__4AB81AF0");

                    b.HasOne("QuizForAndroid.DAL.Entities.Specialization", "Specialization")
                        .WithMany("Users")
                        .HasForeignKey("SpecializationId")
                        .IsRequired()
                        .HasConstraintName("FK__Users__Specializ__49C3F6B7");

                    b.HasOne("QuizForAndroid.DAL.Entities.University", "University")
                        .WithMany("Users")
                        .HasForeignKey("UniversityId")
                        .IsRequired()
                        .HasConstraintName("FK__Users__Universit__47DBAE45");

                    b.Navigation("College");

                    b.Navigation("Role");

                    b.Navigation("Specialization");

                    b.Navigation("University");
                });

            modelBuilder.Entity("QuizForAndroid.DAL.Entities.WriterApplication", b =>
                {
                    b.HasOne("QuizForAndroid.DAL.Entities.User", "ReviewedByNavigation")
                        .WithMany("WriterApplicationReviewedByNavigations")
                        .HasForeignKey("ReviewedBy")
                        .HasConstraintName("FK__WriterApp__Revie__787EE5A0");

                    b.HasOne("QuizForAndroid.DAL.Entities.User", "User")
                        .WithMany("WriterApplicationUsers")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__WriterApp__UserI__778AC167");

                    b.Navigation("ReviewedByNavigation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuizForAndroid.DAL.Entities.College", b =>
                {
                    b.Navigation("Materials");

                    b.Navigation("Specializations");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("QuizForAndroid.DAL.Entities.Material", b =>
                {
                    b.Navigation("Quizzes");
                });

            modelBuilder.Entity("QuizForAndroid.DAL.Entities.Question", b =>
                {
                    b.Navigation("Choices");
                });

            modelBuilder.Entity("QuizForAndroid.DAL.Entities.Quiz", b =>
                {
                    b.Navigation("Drafts");

                    b.Navigation("Questions");

                    b.Navigation("QuizLikesDislikes");
                });

            modelBuilder.Entity("QuizForAndroid.DAL.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("QuizForAndroid.DAL.Entities.Specialization", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("QuizForAndroid.DAL.Entities.University", b =>
                {
                    b.Navigation("Colleges");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("QuizForAndroid.DAL.Entities.User", b =>
                {
                    b.Navigation("QuizLikesDislikes");

                    b.Navigation("Quizzes");

                    b.Navigation("WriterApplicationReviewedByNavigations");

                    b.Navigation("WriterApplicationUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
